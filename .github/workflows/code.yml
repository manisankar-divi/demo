name: VPN Test

on: [push]

jobs:
  test-vpn:
    runs-on: ubuntu-latest
    steps:
      # - name: Install OpenVPN
      #   run: |
      #    sudo apt-get update
      #    sudo apt-get --assume-yes --no-install-recommends install openvpn          

      # - name: Connect to vpn
      #   timeout-minutes: 1
      #   run: |
      #    sudo openvpn --config ".github/config.ovpn" --log "vpn.log" --daemon
      #    until ping -c1  vpn-private-ip; do echo wait for vpn; sleep 3; done
         
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install -y openvpn
      - name: Connect to vpn
        timeout-minutes: 1
        run: |
          pwd && ls -la
          echo "${{ secrets.OPENVPN_CONFIG }}" | base64 --decode > k8s-client.ovpn
          sudo openvpn --config k8s-client.ovpn --log "vpn.log" --daemon
          until ping -c1  vpn-private-ip; do echo wait for vpn; sleep 3; done
          
      - name: Connect to VPN
        run: |
          pwd && ls -la
          echo "${{ secrets.OPENVPN_CONFIG }}" | base64 --decode > k8s-client.ovpn
          pwd && ls -la
          cat k8s-client.ovpn
          sudo ifconfig
          sudo openvpn --config k8s-client.ovpn
          sudo ifconfig


      - name: Check VPN Connection
        run: |
          # Check the IP address to verify the VPN connection
          ip addr show tun0 || echo "VPN not connected"
          # Optionally check public IP
          curl ifconfig.me || echo "Failed to get public IP"

      - name: Run your job
        run: |
          echo "Running tasks over VPN..."

# jobs:
#   deploy:
#     runs-on: self-hosted  
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
        
#       - uses: actions-hub/kubectl@master
#         env:
#           KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
#         with:
#           args: get pods
#       - name: checking manifest files
#         run: pwd && ls -la
#       - name: k8s
#         run: |
#              kubectl apply -f namespace.yaml
#              kubectl apply -f configmap.yaml
#              kubectl apply -f deployment.yaml
#              kubectl apply -f service.yaml

